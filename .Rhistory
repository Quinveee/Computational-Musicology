}
plot(1:15, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
km.plot <- plot(pca.out$x[, 1:2], col = km.out$cluster, xlab="", ylab="", main="k-means with 3 clusters")
clus.names <- corpus %>% mutate(cluster = km.out$cluster) %>% select(track.name, cluster)
print(clus.names)
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out)
fviz_pca_var(pca.out,
col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
wss <- 0
for (i in 1:15) {
km.out <- kmeans(pca.out$x[, 1:7], centers = i, nstart=30)
# Save total within sum of squares to wss variable
wss[i] <- km.out$tot.withinss
}
plot(1:15, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
km.plot <- plot(pca.out$x[, 1:2], col = km.out$cluster, xlab="", ylab="", main="k-means with 3 clusters")
appendix <- corpus %>%
mutate(cluster = km.out$cluster) %>%
select(track.album.name, track.artists, track.name, track.album.release_date, cluster)
artists <- lapply(appendix$track.artists, function(x) x$name)
datatable(appendix, style = "auto", colnames = c("Album", "Track Name", "Release Date", "Cluster"))
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out)
fviz_pca_var(pca.out,
col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
wss <- 0
for (i in 1:15) {
km.out <- kmeans(pca.out$x[, 1:7], centers = i, nstart=30)
# Save total within sum of squares to wss variable
wss[i] <- km.out$tot.withinss
}
plot(1:15, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
km.plot <- plot(pca.out$x[, 1:2], col = km.out$cluster, xlab="", ylab="", main="k-means with 3 clusters")
appendix <- corpus %>%
mutate(cluster = km.out$cluster) %>%
select(track.album.name, track.artists, track.name, track.album.release_date, cluster)
artists <- lapply(appendix$track.artists, function(x) x$name)
datatable(appendix, style = "auto", colnames = c("Album", "Artist", "Track Name", "Release Date", "Cluster"))
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out)
fviz_pca_var(pca.out,
col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
wss <- 0
for (i in 1:15) {
km.out <- kmeans(pca.out$x[, 1:7], centers = i, nstart=30)
# Save total within sum of squares to wss variable
wss[i] <- km.out$tot.withinss
}
plot(1:15, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
km.plot <- plot(pca.out$x[, 1:2], col = km.out$cluster, xlab="", ylab="", main="k-means with 3 clusters")
appendix <- corpus %>%
mutate(cluster = km.out$cluster) %>%
select(track.album.name, track.artists, track.name, track.album.release_date, cluster)
artists <- lapply(appendix$track.artists, function(x) x$name)
appendix <- merge(appendix, artist)
datatable(appendix, style = "auto", colnames = c("Album", "Artist", "Track Name", "Release Date", "Cluster"))
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out)
fviz_pca_var(pca.out,
col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
wss <- 0
for (i in 1:15) {
km.out <- kmeans(pca.out$x[, 1:7], centers = i, nstart=30)
# Save total within sum of squares to wss variable
wss[i] <- km.out$tot.withinss
}
plot(1:15, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
km.plot <- plot(pca.out$x[, 1:2], col = km.out$cluster, xlab="", ylab="", main="k-means with 3 clusters")
appendix <- corpus %>%
mutate(cluster = km.out$cluster) %>%
select(track.album.name, track.artists, track.name, track.album.release_date, cluster)
artists <- lapply(appendix$track.artists, function(x) x$name)
for( i in 1:nrow(appendix)){
name <- artists[i][[1]]
if (length(name) > 1){
for(j in length(name)){
name <- paste(name[j-1], name[j], sep = ", ")
}
}
appendix[i, "artist"] <- name
}
appendix <- subset(appendix, select = -track.artists)
artistAlbumGenre_df <- appendix %>%
select(track.album.name, artist) %>%
unique()
artistAlbumGenre_df$genre = NA
appendix <- merge(appendix, artistAlbumGenre_df)
datatable(appendix, style = "auto", colnames = c("Album", "Artist", "Track Name", "Release Date", "Cluster"))
?datatable
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out)
fviz_pca_var(pca.out,
col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
wss <- 0
for (i in 1:15) {
km.out <- kmeans(pca.out$x[, 1:7], centers = i, nstart=30)
# Save total within sum of squares to wss variable
wss[i] <- km.out$tot.withinss
}
plot(1:15, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
km.plot <- plot(pca.out$x[, 1:2], col = km.out$cluster, xlab="", ylab="", main="k-means with 3 clusters")
appendix <- corpus %>%
mutate(cluster = km.out$cluster) %>%
select(track.album.name, track.artists, track.name, track.album.release_date, cluster)
artists <- lapply(appendix$track.artists, function(x) x$name)
for( i in 1:nrow(appendix)){
name <- artists[i][[1]]
if (length(name) > 1){
for(j in length(name)){
name <- paste(name[j-1], name[j], sep = ", ")
}
}
appendix[i, "artist"] <- name
}
appendix <- subset(appendix, select = -track.artists)
artistAlbumGenre_df <- appendix %>%
select(track.album.name, artist) %>%
unique()
artistAlbumGenre_df$genre = NA
appendix <- merge(appendix, artistAlbumGenre_df)
print(appendix)
datatable(appendix, style = "auto", colnames = c("Album", "Artist", "Track Name", "Release Date", "Cluster"))
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out)
fviz_pca_var(pca.out,
col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
wss <- 0
for (i in 1:15) {
km.out <- kmeans(pca.out$x[, 1:7], centers = i, nstart=30)
# Save total within sum of squares to wss variable
wss[i] <- km.out$tot.withinss
}
plot(1:15, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
km.plot <- plot(pca.out$x[, 1:2], col = km.out$cluster, xlab="", ylab="", main="k-means with 3 clusters")
appendix <- corpus %>%
mutate(cluster = km.out$cluster) %>%
select(track.album.name, track.artists, track.name, track.album.release_date, cluster)
artists <- lapply(appendix$track.artists, function(x) x$name)
for( i in 1:nrow(appendix)){
name <- artists[i][[1]]
if (length(name) > 1){
for(j in length(name)){
name <- paste(name[j-1], name[j], sep = ", ")
}
}
appendix[i, "artist"] <- name
}
appendix <- subset(appendix, select = -track.artists)
artistAlbumGenre_df <- appendix %>%
select(track.album.name, artist) %>%
unique()
artistAlbumGenre_df$genre = NA
appendix <- merge(appendix, artistAlbumGenre_df)
datatable(appendix, style = "auto", colnames = c("Album", "Artist", "Track Name", "Release Date", "Cluster"))
pca.in.tem <- corpus %>% group_by(track.album.name) %>% summarise(
mean_speechiness = mean(speechiness),
mean_acousticness = mean(acousticness),
mean_liveness = mean(liveness),
mean_danceability = mean(danceability),
mean_energy = mean(energy),
mean_instrumentalness = mean(instrumentalness),
mean_valence = mean(valence)
# ,
# mean_key = mean(key)
# ,
# mean_mode = mean(mode)
# ,
# mean_tempo = mean(tempo)
)
pca.in <- pca.in.tem[, 2:8]
labels <- pca.in.tem[, 1] %>% unique()
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
hclust.complete <- hclust(dist(pca.out$x), method = "complete")
plot(hclust.complete, labels = labels[[1]], main="Complete", hang = -1, cex = 1, xlab = "Album",col="skyblue4")
appendix <- corpus %>%
mutate(cluster = km.out$cluster) %>%
select(track.album.name, track.artists, track.name, track.album.release_date, cluster)
artists <- lapply(appendix$track.artists, function(x) x$name)
for( i in 1:nrow(appendix)){
name <- artists[i][[1]]
if (length(name) > 1){
for(j in length(name)){
name <- paste(name[j-1], name[j], sep = ", ")
}
}
appendix[i, "artist"] <- name
}
appendix <- subset(appendix, select = -track.artists)
artistAlbumGenre_df <- appendix %>%
select(track.album.name, artist) %>%
unique()
artistAlbumGenre_df$genre = NA
appendix <- merge(appendix, artistAlbumGenre_df)
datatable(appendix, style = "auto", colnames = c("i", "Album", "Artist", "Track Name", "Release Date", "Cluster"))
appendix <- corpus %>%
mutate(cluster = km.out$cluster) %>%
select(track.album.name, track.artists, track.name, track.album.release_date, cluster)
artists <- lapply(appendix$track.artists, function(x) x$name)
for( i in 1:nrow(appendix)){
name <- artists[i][[1]]
if (length(name) > 1){
for(j in length(name)){
name <- paste(name[j-1], name[j], sep = ", ")
}
}
appendix[i, "artist"] <- name
}
appendix <- subset(appendix, select = -track.artists)
artistAlbumGenre_df <- appendix %>%
select(track.album.name, artist) %>%
unique()
artistAlbumGenre_df$genre = NA
appendix <- merge(appendix, artistAlbumGenre_df)
datatable(appendix, style = "auto", colnames = c("Album", "Artist", "Track Name", "Release Date", "Cluster"))
appendix <- corpus %>%
mutate(cluster = km.out$cluster) %>%
select(track.album.name, track.artists, track.name, track.album.release_date, cluster)
artists <- lapply(appendix$track.artists, function(x) x$name)
for( i in 1:nrow(appendix)){
name <- artists[i][[1]]
if (length(name) > 1){
for(j in length(name)){
name <- paste(name[j-1], name[j], sep = ", ")
}
}
appendix[i, "artist"] <- name
}
appendix <- subset(appendix, select = -track.artists)
artistAlbumGenre_df <- appendix %>%
select(track.album.name, artist) %>%
unique()
artistAlbumGenre_df$genre = NA
appendix <- merge(appendix, artistAlbumGenre_df)
datatable(appendix, style = "auto", colnames = c("Album", "Artist", "Track Name", "Release Date", "Cluster"))
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
km.plot <- plot(pca.out$x[, 1:2], col = km.out$cluster, xlab="", ylab="", main="k-means with 3 clusters")
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out)
fviz_pca_var(pca.out,
col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE
)
wss <- 0
for (i in 1:15) {
km.out <- kmeans(pca.out$x[, 1:7], centers = i, nstart=30)
# Save total within sum of squares to wss variable
wss[i] <- km.out$tot.withinss
}
plot(1:15, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within groups sum of squares")
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
km.plot <- plot(pca.out$x[, 1:2], col = km.out$cluster, xlab="", ylab="", main="k-means with 3 clusters")
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out, gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out, col.var = "contrib", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out, col="#00AFBB")
?fviz_eig
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out, barcolor = "#00AFBB")
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out, barcolor = "#00AFBB", linecolor = "#00AFBB")
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out, barcolor = "#00AFBB", barfill = "#00AFBB")
pca.in.tem <- corpus %>% group_by(track.album.name) %>% summarise(
mean_speechiness = mean(speechiness),
mean_acousticness = mean(acousticness),
mean_liveness = mean(liveness),
mean_danceability = mean(danceability),
mean_energy = mean(energy),
mean_instrumentalness = mean(instrumentalness),
mean_valence = mean(valence)
# ,
# mean_key = mean(key)
# ,
# mean_mode = mean(mode)
# ,
# mean_tempo = mean(tempo)
)
pca.in <- pca.in.tem[, 2:8]
labels <- pca.in.tem[, 1] %>% unique()
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
hclust.complete <- hclust(dist(pca.out$x), method = "complete")
plot(hclust.complete, labels = labels[[1]], main="Complete", hang = -1, cex = 1, xlab = "Album",col="00AFBB")
pca.in.tem <- corpus %>% group_by(track.album.name) %>% summarise(
mean_speechiness = mean(speechiness),
mean_acousticness = mean(acousticness),
mean_liveness = mean(liveness),
mean_danceability = mean(danceability),
mean_energy = mean(energy),
mean_instrumentalness = mean(instrumentalness),
mean_valence = mean(valence)
# ,
# mean_key = mean(key)
# ,
# mean_mode = mean(mode)
# ,
# mean_tempo = mean(tempo)
)
pca.in <- pca.in.tem[, 2:8]
labels <- pca.in.tem[, 1] %>% unique()
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
hclust.complete <- hclust(dist(pca.out$x), method = "complete")
plot(hclust.complete, labels = labels[[1]], main="Complete", hang = -1, cex = 1, xlab = "Album",col="#00AFBB")
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out, barfill = "#00AFBB")
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
km.plot <- plot(pca.out$x[, 1:2], col = km.out$cluster, gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), xlab="", ylab="", main="k-means with 3 clusters")
plot
?plot
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out, barcolor = "#00AFBB", barfill = "#00AFBB")
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out, barcolor = "#00AFBB", barfill = "#00AFBB")
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
km.plot <- plot(pca.out$x[, 1:2], col = km.out$cluster, xlab="", ylab="", main="k-means with 3 clusters")
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
km.colors[km.out$cluster == 1] <- "#00AFBB"
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
km.colors <- matrix(NA, nrow = nrow(km.out), ncol = ncol(km.out))
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
km.colors <- matrix(NA, nrow = nrow(km.out$cluster), ncol = ncol(km.out$cluster))
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
print(km.out$cluster)
km.colors <- matrix(NA, nrow = nrow(km.out$cluster), ncol = ncol(km.out$cluster))
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
print(nrow(km.out$cluster))
km.colors <- matrix(NA, nrow = nrow(km.out$cluster), ncol = ncol(km.out$cluster))
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
print(size(km.out$cluster))
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
print(length(km.out$cluster))
km.colors <- matrix(NA, nrow = nrow(km.out$cluster), ncol = ncol(km.out$cluster))
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
# gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
print(length(km.out$cluster))
km.colors <- matrix(NA, nrow = length(km.out$cluster), ncol = 1)
km.colors[km.out$cluster == 1] <- "#00AFBB"
km.colors[km.out$cluster == 2] <- "#E7B800"
km.colors[km.out$cluster == 3] <- "#FC4E07"
km.plot <- plot(pca.out$x[, 1:2], col = km.colors, xlab="", ylab="", main="k-means with 3 clusters")
km.out <- kmeans(pca.out$x[, 1:7], nstart=30, centers=3)
km.colors <- matrix(NA, nrow = length(km.out$cluster), ncol = 1)
km.colors[km.out$cluster == 1] <- "#00AFBB"
km.colors[km.out$cluster == 2] <- "#E7B800"
km.colors[km.out$cluster == 3] <- "#FC4E07"
km.plot <- plot(pca.out$x[, 1:2], col = km.colors, xlab="", ylab="", main="k-means with 3 clusters")
wss <- 0
for (i in 1:15) {
km.out <- kmeans(pca.out$x[, 1:7], centers = i, nstart=30)
# Save total within sum of squares to wss variable
wss[i] <- km.out$tot.withinss
}
plot(1:15, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within groups sum of squares", col = "red")
wss <- 0
for (i in 1:15) {
km.out <- kmeans(pca.out$x[, 1:7], centers = i, nstart=30)
# Save total within sum of squares to wss variable
wss[i] <- km.out$tot.withinss
}
plot(1:15, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within groups sum of squares", col = "#00AFBB")
wss <- 0
for (i in 1:15) {
km.out <- kmeans(pca.out$x[, 1:7], centers = i, nstart=30)
# Save total within sum of squares to wss variable
wss[i] <- km.out$tot.withinss
}
plot(1:15, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within groups sum of squares", col = "#E7B800")
wss <- 0
for (i in 1:15) {
km.out <- kmeans(pca.out$x[, 1:7], centers = i, nstart=30)
# Save total within sum of squares to wss variable
wss[i] <- km.out$tot.withinss
}
plot(1:15, wss, type = "b",
xlab = "Number of Clusters",
ylab = "Within groups sum of squares", col = "#FC4E07")
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out, barcolor = "#00AFBB", barfill = "#00AFBB", linecolor = "#FC4E07")
library(factoextra)
# , mode, key, tempo
pca.in <- corpus %>% select(danceability, energy, speechiness, acousticness, instrumentalness, liveness, valence)
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
fviz_eig(pca.out, barfill = "#00AFBB", linecolor = "#FC4E07")
pca.in.tem <- corpus %>% group_by(track.album.name) %>% summarise(
mean_speechiness = mean(speechiness),
mean_acousticness = mean(acousticness),
mean_liveness = mean(liveness),
mean_danceability = mean(danceability),
mean_energy = mean(energy),
mean_instrumentalness = mean(instrumentalness),
mean_valence = mean(valence)
# ,
# mean_key = mean(key)
# ,
# mean_mode = mean(mode)
# ,
# mean_tempo = mean(tempo)
)
pca.in <- pca.in.tem[, 2:8]
labels <- pca.in.tem[, 1] %>% unique()
pca.out <- prcomp(x = pca.in, scale = FALSE, center = TRUE)
hclust.complete <- hclust(dist(pca.out$x), method = "complete")
plot(hclust.complete, labels = labels[[1]], main="Complete", hang = -1, cex = 1, xlab = "Album",col="#00AFBB")
